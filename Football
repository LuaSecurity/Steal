repeat task.wait() until game:IsLoaded() and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
task.wait(2)

if _G.AutoRob then return end
_G.AutoRob = true
print("Auto robber loaded")
queue_on_teleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/LuaSecurity/Steal/refs/heads/main/Football'))()")

local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local request = request or http_request or syn.request
local LocalPlayer = Players.LocalPlayer
local Bases = workspace:WaitForChild("Map"):WaitForChild("Bases")

local function shop()
    pcall(function()
        if #Players:GetPlayers() <= 1 then
            LocalPlayer:Kick("Rejoining...")
            TeleportService:Teleport(game.PlaceId, LocalPlayer)
            return
        end
        local servers, cursor = {}, ""
        repeat
            local req = request({
                Url = "https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true" .. (cursor ~= "" and "&cursor="..cursor or "")
            })
            local body = HttpService:JSONDecode(req.Body)
            if body and body.data then
                for _, v in next, body.data do
                    if v.playing < v.maxPlayers and v.id ~= game.JobId then
                        table.insert(servers, v.id)
                    end
                end
                cursor = body.nextPageCursor
            else
                break
            end
        until not cursor
        if #servers > 0 then
            TeleportService:TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)], LocalPlayer)
        else
            TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, LocalPlayer)
        end
    end)
end

local plrBase
for _, base in ipairs(Bases:GetChildren()) do
    for _, obj in ipairs(base:GetDescendants()) do
        if obj:IsA("TextLabel") and obj.Text == LocalPlayer.Name .. "'s Slot" then
            plrBase = base
            break
        end
    end
    if plrBase then break end
end

if plrBase then
    plrBase.Important.RobberyDeposit.Size = Vector3.new(2000, 100, 2000)
    local lockBtn = plrBase:FindFirstChild("Important", true):FindFirstChild("LockButton")
    if lockBtn and lockBtn:FindFirstChildWhichIsA("TouchTransmitter", true) then
        firetouchinterest(LocalPlayer.Character.HumanoidRootPart, lockBtn, 0)
        firetouchinterest(LocalPlayer.Character.HumanoidRootPart, lockBtn, 1)
    end
end

local function parseText(text)
    text = text:gsub("[$/s]", ""):upper()
    local num = tonumber(text:match("[%.%d]+")) or 0
    if text:find("K") then num *= 1000 end
    return num
end

coroutine.wrap(function()
    while true do
        for i = 1, 8 do
            local base = Bases:FindFirstChild(tostring(i))
            if base and base ~= plrBase then
                local lock = base:FindFirstChild("Important", true)
                if lock then
                    local button = lock:FindFirstChild("LockButton")
                    if button and button:FindFirstChildWhichIsA("TouchTransmitter", true) then
                        firetouchinterest(LocalPlayer.Character.HumanoidRootPart, button, 0)
                        firetouchinterest(LocalPlayer.Character.HumanoidRootPart, button, 1)
                    end
                end
            end
        end
        task.wait(0.05)
    end
end)()

while true do
    local found = false
    for i = 1, 8 do
        local base = Bases:FindFirstChild(tostring(i))
        if base and base ~= plrBase then
            for padNum = 1, 10 do
                local npcPad = base:FindFirstChild("Important", true):FindFirstChild("NPCPads", true)
                local pad = npcPad and npcPad:FindFirstChild(tostring(padNum))
                local npc = pad and pad:FindFirstChild("Character")
                if npc then
                    local head = npc:FindFirstChild("Head", true)
                    local overhead = head and head:FindFirstChild("OverHeadAttachment", true)
                    local info = overhead and overhead:FindFirstChild("CharacterInfo", true)
                    local label = info and info:FindFirstChild("Frame", true) and info.Frame:FindFirstChild("PerSecond")
                    if label and label:IsA("TextLabel") then
                        local value = parseText(label.Text)
                        if value >= 2000 then
                            local prompt = npc:FindFirstChild("SlotPrompt", true)
                            if prompt and prompt:IsA("ProximityPrompt") then
                                LocalPlayer.Character:PivotTo(prompt.Parent.CFrame + Vector3.new(0, 2, 0))
                                task.wait(0.1)
                                fireproximityprompt(prompt)
                                print("Grabbed from Base " .. i .. " NPC " .. padNum .. ": " .. label.Text)
                                task.wait(0.2)
                                found = true
                            end
                        end
                    end
                end
            end
        end
    end
    if not found then
        task.wait(0.5)
        shop()
        break
    end
end
