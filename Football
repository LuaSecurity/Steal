repeat task.wait() until game:IsLoaded()
repeat task.wait() until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
wait(2)
queue_on_teleport('loadstring(game:HttpGet("https://raw.githubusercontent.com/LuaSecurity/Steal/refs/heads/main/Football"))()')

local plr = game.Players.LocalPlayer
local Bases = workspace:WaitForChild("Map"):WaitForChild("Bases")

function shop()
	local a, b = pcall(function()
		local servers = {}
		local cursor = ""
		local found = false

		repeat
			local req = request({
				Url = "https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true&cursor="..cursor
			})
			local body = game:GetService("HttpService"):JSONDecode(req.Body)
			if body and body.data then
				for _, v in next, body.data do
					if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= game.JobId then
						table.insert(servers, v.id)
					end
				end
			end
			cursor = body.nextPageCursor or ""
		until cursor == "" or #servers >= 5

		if #servers > 0 then
			game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)], plr)
		else
			if #game.Players:GetChildren() <= 1 then
				plr:Kick("\nRejoining...")
				task.wait()
				game:GetService("TeleportService"):Teleport(game.PlaceId, plr)
			else
				game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, plr)
			end
		end
	end)

	if not a then
		shop()
	end

	task.spawn(function()
		while task.wait(5) do
			shop()
		end
	end)
end

local plrBase = nil

for _, base in ipairs(Bases:GetChildren()) do
	for _, descendant in ipairs(base:GetDescendants()) do
		if descendant:IsA("TextLabel") and descendant.Text == plr.Name .. "'s Slot" then
			plrBase = base
			break
		end
	end
	if plrBase then break end
end

if plrBase then
	plrBase.Important.RobberyDeposit.Size = Vector3.new(2000, 100, 2000)
end

local function parseText(text)
	text = text:gsub("[$/s]", ""):upper()
	local num = tonumber(text:match("[%.%d]+")) or 0
	if text:find("K") then
		num *= 1000
	end
	return num
end

coroutine.wrap(function()
	while true do
		for i = 1, 8 do
			local base = Bases:FindFirstChild(tostring(i))
			if base and base ~= plrBase then
				local lock = base:FindFirstChild("Important", true)
				if lock then
					local button = lock:FindFirstChild("LockButton")
					if button and button:FindFirstChildWhichIsA("TouchTransmitter", true) then
						firetouchinterest(plr.Character.HumanoidRootPart, button, 0)
						firetouchinterest(plr.Character.HumanoidRootPart, button, 1)
					end
				end
			end
		end
		task.wait(0.05)
	end
end)()

while true do
	local found = false
	for i = 1, 8 do
		local base = Bases:FindFirstChild(tostring(i))
		if base and base ~= plrBase then
			for padNum = 1, 10 do
				local textLabel = base:FindFirstChild("Important", true)
				if textLabel then
					local perSecond = textLabel:FindFirstChild("NPCPads", true)
					if perSecond and perSecond:FindFirstChild(tostring(padNum)) then
						local npcChar = perSecond[tostring(padNum)]:FindFirstChild("Character")
						if npcChar then
							local txt = npcChar:FindFirstChild("Head", true)
							if txt then
								local label = txt:FindFirstChild("OverHeadAttachment", true)
								if label and label:FindFirstChild("CharacterInfo", true) then
									local info = label.CharacterInfo.Frame.PerSecond
									if info and info:IsA("TextLabel") then
										local value = parseText(info.Text)
										if value >= 2000 then
											local prompt = npcChar:FindFirstChild("SlotPrompt", true)
											if prompt and prompt:IsA("ProximityPrompt") then
												plr.Character:PivotTo(prompt.Parent.CFrame + Vector3.new(0, 2, 0))
												task.wait(0.1)
												fireproximityprompt(prompt)
												print("Ativado em Base " .. i .. " NPC " .. padNum .. ": " .. info.Text)
												task.wait(0.2)
												found = true
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	if not found then
		task.wait(0.2)
		shop()
	end
end
