repeat task.wait() until game:IsLoaded()
repeat task.wait() until game.Players.LocalPlayer.Character
repeat task.wait() until game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
task.wait(2)

queue_on_teleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/LuaSecurity/Steal/refs/heads/main/FootBall%20Sell'))()")

if _G.AutoRob then return end
_G.AutoRob = true

local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local request = request or http_request or syn.request
local LocalPlayer = Players.LocalPlayer
local Bases = workspace:WaitForChild("Map"):WaitForChild("Bases")

local function getNpcValuePerSecond(npc)
    local perSecondLabel = npc:FindFirstChild("Head") and npc.Head:FindFirstChild("OverHeadAttachment") 
        and npc.Head.OverHeadAttachment:FindFirstChild("CharacterInfo") 
        and npc.Head.OverHeadAttachment.CharacterInfo:FindFirstChild("Frame") 
        and npc.Head.OverHeadAttachment.CharacterInfo.Frame:FindFirstChild("PerSecond")
    
    if not perSecondLabel then return 0 end
    
    local text = perSecondLabel.Text
    local value = tonumber(text:match("[%.%d]+") or 0
    return text:find("K") and value * 1000 or value
end

local function hasAnyNPC(base)
    if not base then return false end
    local pads = base:FindFirstChild("Important"):FindFirstChild("NPCPads")
    if not pads then return false end
    
    for i = 1, 10 do
        if pads:FindFirstChild(tostring(i)) and pads[tostring(i)]:FindFirstChild("Character") then
            return true
        end
    end
    return false
end

local function sellAllNPCs(base)
    if not base then return end
    local pads = base.Important.NPCPads
    if not pads then return end
    
    repeat
        local soldAny = false
        for i = 1, 10 do
            local pad = pads[tostring(i)]
            if pad then
                local npc = pad:FindFirstChild("Character")
                if npc then
                    local unitName = npc.Head.OverHeadAttachment.CharacterInfo.Frame:FindFirstChild("UnitName")
                    if unitName and unitName.Text == "IShowSpeed" then continue end
                    
                    local prompt = npc:FindFirstChild("SlotPrompt", true)
                    if prompt then
                        LocalPlayer.Character:PivotTo(prompt.Parent.CFrame + Vector3.new(0, 2, 0))
                        task.wait(0.05)
                        fireproximityprompt(prompt)
                        soldAny = true
                        task.wait(0.1)
                    end
                end
            end
        end
    until not soldAny or not hasAnyNPC(base)
end

local function closeBase()
    for i = 1, 8 do
        local base = Bases[tostring(i)]
        if base and base:FindFirstChild("Important") then
            local button = base.Important:FindFirstChild("LockButton")
            if button and button:FindFirstChildWhichIsA("TouchTransmitter", true) then
                firetouchinterest(LocalPlayer.Character.HumanoidRootPart, button, 0)
                firetouchinterest(LocalPlayer.Character.HumanoidRootPart, button, 1)
                break
            end
        end
    end
end

local function findNewServer()
    local servers = {}
    local cursor = ""
    
    repeat
        local req = request({
            Url = "https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Desc&limit=100"..(cursor ~= "" and "&cursor="..cursor or "")
        })
        local body = HttpService:JSONDecode(req.Body)
        
        if body and body.data then
            for _, v in next, body.data do
                if v.playing < v.maxPlayers and v.id ~= game.JobId then
                    table.insert(servers, v.id)
                end
            end
            cursor = body.nextPageCursor
        end
    until not cursor or #servers >= 10

    if #servers > 0 then
        TeleportService:TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)], LocalPlayer)
    else
        TeleportService:Teleport(game.PlaceId, LocalPlayer)
    end
end

local plrBase = nil
for _, base in ipairs(Bases:GetChildren()) do
    for _, descendant in ipairs(base:GetDescendants()) do
        if descendant:IsA("TextLabel") and descendant.Text == LocalPlayer.Name .. "'s Slot" then
            plrBase = base
            break
        end
    end
    if plrBase then break end
end

if plrBase then
    plrBase.Important.RobberyDeposit.Size = Vector3.new(2000, 100, 2000)
end

coroutine.wrap(function()
    while true do
        task.wait(0.05)
        game.ReplicatedStorage.Remotes.Rebirth:InvokeServer()
    end
end)()

coroutine.wrap(function()
    while true do
        closeBase()
        task.wait(0.1)
    end
end)()

while true do
    local found = false
    
    for i = 1, 8 do
        local base = Bases[tostring(i)]
        if base and base ~= plrBase then
            for padNum = 1, 10 do
                local pad = base.Important.NPCPads[tostring(padNum)]
                if pad then
                    local npcChar = pad:FindFirstChild("Character")
                    if npcChar then
                        local npcValue = getNpcValuePerSecond(npcChar)
                        if npcValue > 5 then
                            local prompt = npcChar:FindFirstChild("SlotPrompt", true)
                            if prompt then
                                LocalPlayer.Character:PivotTo(prompt.Parent.CFrame + Vector3.new(0, 2, 0))
                                task.wait(0.05)
                                fireproximityprompt(prompt)
                                found = true
                                task.wait(0.1)
                            end
                        end
                    end
                end
            end
        end
    end
    
    if plrBase and hasAnyNPC(plrBase) then
        sellAllNPCs(plrBase)
        task.wait(0.5)
    end
    
    if not found then
        findNewServer()
        break
    end
end
